{% extends 'fhc_layout.html' %}

{% block content %}
<span id='movie-list-wrapper'>
    <div id='movie-list-scroll'>
        <div id='movie-list'>
        {% for number,title in movies.iteritems()|sort %}
            <div id="{{ number }}::{{ title }}" class='movie-list-row'>
                <a href="{{url_for( 'movie_for',title=title,number=number )}}"
                   class='movie-item-ref' draggable='true'
                   title="number: {{number}}">{{title}}</a>
            </div>
        {% endfor %}
        </div>
    </div>
</span>

<span id='movie-details-wrapper'>
    <div id='filter-wrapper' >
        <span id='filter-label-wrapper' class='filter-td'>
            <label id='filter-label' for='filter-input'>Search</label>
        </span>
        <span id='filter-input-wrapper' class='filter-td'>
            <input type='text' oninput="filterChanged( this )" id='filter-input' />
        </span>
    </div>
    
    <div id='details-wrapper'>
        <div id='details-header'>
        </div>
        <div id='details-content'>
        </div>
    </div>
</span>

<script>
    var movies = {{ movies|tojson|safe }};
    var $_mlrows = $('.movie-list-row');
    var $_mlist  = $('#movie-list');

    var $_dhtitle = $('#dheader-title');

    function buildMovieDetails(data, textStatus, jqXhr) {
        $_dhtitle.html( data['OriginalTitle'] );
    }


    function fetchFrom(list, filter) {
        var res = new Array();
        for(var i = 0; i < list.length; i++) {
            var $_item  = $( list[i] );
            var IDparts = $_item.attr('id').split('::');
            
            if( IDparts[0].indexOf(filter) > -1 || 
                IDparts[1].indexOf(filter) > -1 ) {
                res.push( $_item );
            }
        }
        return res;
    }


    function filterChanged( input ) {
        var filter_str = $(input).val();
        
        $_mlist.empty();
        var rows;
        
        if( filter_str.length <= 0 ) {
            rows = $_mlrows;
        } else {
            rows = fetchFrom( $_mlrows,filter_str );
        }
        
        $_mlist.append( rows );
    }

    
    function onMovieClick( event ) {
        event.preventDefault();
        
        var $_this = $(this);
        
        // Send an Ajax request to the server for the data
        $.ajax({
            url: $_this.attr('href'),
            processData: false,
            dataType: 'json',
            success: buildMovieDetails
        });
        
        // while waiting, set the selected item ;)
        $('.movie-item-ref').removeClass('selected-movie');
        $_this.addClass('selected-movie');
    }
    
    $('.movie-item-ref').click( onMovieClick );
</script>
{% endblock content %}
